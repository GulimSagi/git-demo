1. Waterfall
	a. analysis (requirements)-what need to be done/what customer wants
	b.design (architecture, DB design, prototype)
	c.development (coding) 
	d.testing(testing, test prep, test&issues, concl about quality)
	e.release&maintenance (app delivery, user acceptance, maintenance, support)
Waterfall 1st process model, expensive. Only use when all doc are exist. 

2.Agile
	tells not what to do, tells how to do a work. 
	working software valued over comprehensive document.
	customer collaboration over contract negotiat.
	responding to change, quickly respon to changes, over following a plan. 
	
	Principles:
	1, the high priority is to satisfy the custm through early and contin delivery
	2, welcome changing requirements
	3, deliver working software frequently (form a couple of weeks to a months)
	4, Business people and devs must work 2gether daily 
	5, Build projects around motivated individs. 
	6, method of conveying info to and within a devteam is face2face.
	7,Working soft is key factor of measuring progress (how many features added, KPI)
	8,Agile processes promote sustainable development.
	9,Cont. attention to tech excellence and good design
	10, Simplicity is essential
	11, Self org team
	12,
3.Scrum
	Concept-based on sprints, short amount of time where u will decide what u will do and how (divide for smaller subtasks)
	Product backlog -> sprint backlog ->2-4 weeks/more -> Shippable product
	Scrum Elements: 
		Roles (product owner(sets priorities, responsible for initial planning, plan from business side), scrum master(respond for ensuring scrum), Dev team (create product, cross-functional, 9no of people is ideal, no titles/ sub teams)
		Events: 
			Sprint Grooming (performed before sprint-ask questions to Prod Own, define how story can be developed and tested) 
			Sprint Planning (usually performed on the 1st day of a sprint, break large assign into small, estimate how much time is estimate each task execution) 
			Daily Scrum (brief meetings, standup for 10-15 min, where tells what did/will the team do, what obstacles are appeared)
			Sprint Review/Demo (at the end of sprint when scope is ready, Dev/Tester demonstrates the work that was done, receives comment from ProdOwner)
			Sprint Retrospective (What was done well, what could be done better, set timeline for changes, assign responsible person)
		Artifacts (Product backlog(all desired features), sprint backlog, product increment?)
Other Elements: Burndown chart

4.Kanban (simple than Scrum)
todo, dev,test, release, done table. 
good visual, more flex with scope, easy to start. 

Suits for the teams: support product, have a lot changes in backlog during sprit, have dependences from other team (like separate back-end)


